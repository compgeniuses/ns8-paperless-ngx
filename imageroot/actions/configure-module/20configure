#!/usr/bin/env python3

#
# Copyright (C) 2023 Nethesis S.r.l.
# SPDX-License-Identifier: GPL-3.0-or-later
#

import json
import sys
# agent is a NethServer library which provides function to communicate with the agent
import agent

data = json.load(sys.stdin)

# TODO: do something with the request payload. For example configure a
# custom route in our web router. Here the path is hardcoded as
# 'kickstart'.

# Setup default values
paperless_name = data.get("paperless_name","paperless-ngx")

# Talk with agent using file descriptor.
# Setup configuration from user input.
agent.set_env("PAPERLESS_NGX_NAME", paperless_name)
agent.set_env("PAPERLESS_SECRET_KEY", PAPERLESS_SECRET_KEY)
agent.set_env("TRAEFIK_HOST", PAPERLESS_URL)
agent.set_env("PAPERLESS_TIME_ZONE", PAPERLESS_TIME_ZONE)
agent.set_env("PAPERLESS_OCR_LANGUAGE", PAPERLESS_OCR_LANGUAGE)

# Setup PHP with safe defaults
agent.set_env("PHP_ENABLE_OPCACHE", "1")
agent.set_env("PHP_MEMORY_LIMIT", "512M")
# Configure Traefik to route "/kickstart" path requests to the kickstart service


# Make sure everything is saved inside the environment file
# just before starting systemd unit
agent.dump_env()