#!/usr/bin/env python3

#
# Copyright (C) 2023 Nethesis S.r.l.
# SPDX-License-Identifier: GPL-3.0-or-later
#
import os
import json
import sys
# agent is a NethServer library which provides function to communicate with the agent
import agent

data = json.load(sys.stdin)


# Define all the SSO providers
paperless_sso_providers = {
    'agave': "allauth.socialaccount.providers.agave",
    'amazon': "allauth.socialaccount.providers.amazon",
    'amazon_cognito': "allauth.socialaccount.providers.amazon_cognito",
    'angellist': "allauth.socialaccount.providers.angellist",
    'apple': "allauth.socialaccount.providers.apple",
    'asana': "allauth.socialaccount.providers.asana",
    'auth0': "allauth.socialaccount.providers.auth0",
    'authentiq': "allauth.socialaccount.providers.authentiq",
    'baidu': "allauth.socialaccount.providers.baidu",
    'basecamp': "allauth.socialaccount.providers.basecamp",
    'battlenet': "allauth.socialaccount.providers.battlenet",
    'bitbucket_oauth2': "allauth.socialaccount.providers.bitbucket_oauth2",
    'bitly': "allauth.socialaccount.providers.bitly",
    'box': "allauth.socialaccount.providers.box",
    'cilogon': "allauth.socialaccount.providers.cilogon",
    'clever': "allauth.socialaccount.providers.clever",
    'coinbase': "allauth.socialaccount.providers.coinbase",
    'dataporten': "allauth.socialaccount.providers.dataporten",
    'daum': "allauth.socialaccount.providers.daum",
    'digitalocean': "allauth.socialaccount.providers.digitalocean",
    'dingtalk': "allauth.socialaccount.providers.dingtalk",
    'discord': "allauth.socialaccount.providers.discord",
    'disqus': "allauth.socialaccount.providers.disqus",
    'douban': "allauth.socialaccount.providers.douban",
    'doximity': "allauth.socialaccount.providers.doximity",
    'draugiem': "allauth.socialaccount.providers.draugiem",
    'drip': "allauth.socialaccount.providers.drip",
    'dropbox': "allauth.socialaccount.providers.dropbox",
    'dwolla': "allauth.socialaccount.providers.dwolla",
    'edmodo': "allauth.socialaccount.providers.edmodo",
    'edx': "allauth.socialaccount.providers.edx",
    'eventbrite': "allauth.socialaccount.providers.eventbrite",
    'eveonline': "allauth.socialaccount.providers.eveonline",
    'evernote': "allauth.socialaccount.providers.evernote",
    'exist': "allauth.socialaccount.providers.exist",
    'facebook': "allauth.socialaccount.providers.facebook",
    'feedly': "allauth.socialaccount.providers.feedly",
    'figma': "allauth.socialaccount.providers.figma",
    'fivehundredpx': "allauth.socialaccount.providers.fivehundredpx",
    'flickr': "allauth.socialaccount.providers.flickr",
    'foursquare': "allauth.socialaccount.providers.foursquare",
    'frontier': "allauth.socialaccount.providers.frontier",
    'fxa': "allauth.socialaccount.providers.fxa",
    'gitea': "allauth.socialaccount.providers.gitea",
    'github': "allauth.socialaccount.providers.github",
    'gitlab': "allauth.socialaccount.providers.gitlab",
    'globus': "allauth.socialaccount.providers.globus",
    'google': "allauth.socialaccount.providers.google",
    'gumroad': "allauth.socialaccount.providers.gumroad",
    'hubic': "allauth.socialaccount.providers.hubic",
    'instagram': "allauth.socialaccount.providers.instagram",
    'jupyterhub': "allauth.socialaccount.providers.jupyterhub",
    'kakao': "allauth.socialaccount.providers.kakao",
    'lemonldap': "allauth.socialaccount.providers.lemonldap",
    'line': "allauth.socialaccount.providers.line",
    'linkedin': "allauth.socialaccount.providers.linkedin",
    'linkedin_oauth2': "allauth.socialaccount.providers.linkedin_oauth2",
    'mailchimp': "allauth.socialaccount.providers.mailchimp",
    'mailru': "allauth.socialaccount.providers.mailru",
    'mediawiki': "allauth.socialaccount.providers.mediawiki",
    'meetup': "allauth.socialaccount.providers.meetup",
    'miro': "allauth.socialaccount.providers.miro",
    'microsoft': "allauth.socialaccount.providers.microsoft",
    'naver': "allauth.socialaccount.providers.naver",
    'nextcloud': "allauth.socialaccount.providers.nextcloud",
    'notion': "allauth.socialaccount.providers.notion",
    'odnoklassniki': "allauth.socialaccount.providers.odnoklassniki",
    'openid': "allauth.socialaccount.providers.openid",
    'openid_connect': "allauth.socialaccount.providers.openid_connect",
    'openstreetmap': "allauth.socialaccount.providers.openstreetmap",
    'orcid': "allauth.socialaccount.providers.orcid",
    'patreon': "allauth.socialaccount.providers.patreon",
    'paypal': "allauth.socialaccount.providers.paypal",
    'persona': "allauth.socialaccount.providers.persona",
    'pinterest': "allauth.socialaccount.providers.pinterest",
    'pocket': "allauth.socialaccount.providers.pocket",
    'questrade': "allauth.socialaccount.providers.questrade",
    'quickbooks': "allauth.socialaccount.providers.quickbooks",
    'reddit': "allauth.socialaccount.providers.reddit",
    'robinhood': "allauth.socialaccount.providers.robinhood",
    'salesforce': "allauth.socialaccount.providers.salesforce",
    'sharefile': "allauth.socialaccount.providers.sharefile",
    'shopify': "allauth.socialaccount.providers.shopify",
    'slack': "allauth.socialaccount.providers.slack",
    'snapchat': "allauth.socialaccount.providers.snapchat",
    'soundcloud': "allauth.socialaccount.providers.soundcloud",
    'spotify': "allauth.socialaccount.providers.spotify",
    'stackexchange': "allauth.socialaccount.providers.stackexchange",
    'steam': "allauth.socialaccount.providers.steam",
    'stocktwits': "allauth.socialaccount.providers.stocktwits",
    'strava': "allauth.socialaccount.providers.strava",
    'stripe': "allauth.socialaccount.providers.stripe",
    'telegram': "allauth.socialaccount.providers.telegram",
    'trainingpeaks': "allauth.socialaccount.providers.trainingpeaks",
    'trello': "allauth.socialaccount.providers.trello",
    'tumblr': "allauth.socialaccount.providers.tumblr",
    'twentythreeandme': "allauth.socialaccount.providers.twentythreeandme",
    'twitch': "allauth.socialaccount.providers.twitch",
    'twitter': "allauth.socialaccount.providers.twitter",
    'twitter_oauth2': "allauth.socialaccount.providers.twitter_oauth2",
    'untappd': "allauth.socialaccount.providers.untappd",
    'vimeo': "allauth.socialaccount.providers.vimeo",
    'vimeo_oauth2': "allauth.socialaccount.providers.vimeo_oauth2",
    'vk': "allauth.socialaccount.providers.vk",
    'wahoo': "allauth.socialaccount.providers.wahoo",
    'weibo': "allauth.socialaccount.providers.weibo",
    'weixin': "allauth.socialaccount.providers.weixin",
    'windowslive': "allauth.socialaccount.providers.windowslive",
    'xing': "allauth.socialaccount.providers.xing",
    'yahoo': "allauth.socialaccount.providers.yahoo",
    'yandex': "allauth.socialaccount.providers.yandex",
    'ynab': "allauth.socialaccount.providers.ynab",
    'zoho': "allauth.socialaccount.providers.zoho",
    'zoom': "allauth.socialaccount.providers.zoom",
    'okta': "allauth.socialaccount.providers.okta",
    'feishu': "allauth.socialaccount.providers.feishu",
}


# Function to retrieve SSO provider URLs
def get_sso_providers(*provider_names):
    if 'all' in provider_names:
        return list(paperless_sso_providers.values())
    else:
        return [paperless_sso_providers[name] for name in provider_names if name in paperless_sso_providers]

# Example usage:
default_apps = ['openid_connect', 'openid_connect', 'authentiq', 'github', 'gitlab', 'lemonldap', 'nextcloud', 'google']  # Example: Selected providers
sso_provider = get_sso_providers(*default_apps)


print("Providers in use:", sso_provider)



# SSO Functionalities Implemenation
PAPERLESS_APPS = data.get("PAPERLESS_APPS","sso_provider") #Comma Separated list of django apps to be included in django"s INSTALLED_APPS; Defaults to None
agent.set_env("PAPERLESS_APPS", PAPERLESS_APPS)


# Deprecated, for additional Apps support
# PAPERLESS_APPS = data.get("PAPERLESS_APPS", ["openid_connect", "authentiq", "github", "gitlab", "lemonldap", "nextcloud", "google"])



# Setup configuration from user input.
# support for integrating other authentication systems
PAPERLESS_SOCIALACCOUNT_PROVIDERS = data.get("PAPERLESS_SOCIALACCOUNT_PROVIDERS","")
agent.set_env("PAPERLESS_SOCIALACCOUNT_PROVIDERS", PAPERLESS_SOCIALACCOUNT_PROVIDERS)




# Make sure everything is saved inside the environment file
# just before starting systemd unit
agent.dump_env()

#PAPERLESS_SOCIALACCOUNT_PROVIDERS={"openid_connect": {"APPS": 
#   [
#       {"provider_id": "keycloak","name": "Keycloak","client_id": "paperless","secret": "<CLIENT_SECRET>","settings": 
#            { "server_url": "https://<KEYCLOAK_SERVER>/realms/<REALM>/.well-known/openid-configuration"
#
#            }
#        }
#    ]
#                                                    }
#
#},
#{"github": {"APPS": 
#    [
#        {"provider_id": "github","name": "Github","client_id": "<CLIENT_ID>","secret": "<CLIENT_SECRET>"
#        }
#    ]
#            }
#}